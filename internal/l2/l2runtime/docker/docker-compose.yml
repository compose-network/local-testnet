services:
  publisher:
    build:
      context: ${PUBLISHER_PATH}
      dockerfile: Dockerfile
    image: local/publisher:dev
    container_name: publisher
    labels:
      - "stack=localnet-l2"
    environment:
      SERVER_LISTEN_ADDR: ":8080"
      METRICS_ENABLED: "true"
      METRICS_PORT: "8081"
      LOG_LEVEL: "debug"
      LOG_PRETTY: "true"
      AUTH_ENABLED: "false"
      PROOFS_ENABLED: "false"
      PROOFS_REQUIRE_PROOF: "false"
      CONSENSUS_TIMEOUT: "20s"
      L1_RPC_ENDPOINT: "${L1_EL_URL}"
      L1_SUPERBLOCK_CONTRACT: "${SP_L1_SUPERBLOCK_CONTRACT}"
      L1_SHARED_PUBLISHER_PK_HEX: "${SP_L1_SHARED_PUBLISHER_PK_HEX:-${WALLET_PRIVATE_KEY}}"
      L1_FROM_ADDRESS: "${SP_L1_FROM_ADDRESS:-${WALLET_ADDRESS}}"
      L1_DISPUTE_GAME_FACTORY: "${SP_L1_DISPUTE_GAME_FACTORY}"
      L1_CHAIN_ID: "${L1_CHAIN_ID}"
      REGISTRY_STATIC_CHAIN_IDS: "${ROLLUP_A_CHAIN_ID},${ROLLUP_B_CHAIN_ID}"
    ports:
      - "18080:8080"
      - "18081:8081"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8081/health"]
      interval: 15s
      timeout: 5s
      retries: 5

  op-geth-a:
    build:
      context: ${OP_GETH_PATH}
      dockerfile: Dockerfile
    image: local/op-geth:dev
    container_name: op-geth-a
    labels:
      - "stack=localnet-l2"
    environment:
      ROLLUP_CHAIN_ID: "${ROLLUP_A_CHAIN_ID}"
      WALLET_PRIVATE_KEY: "${WALLET_PRIVATE_KEY}"
      SEQUENCER_PRIVATE_KEY: "${SEQUENCER_PRIVATE_KEY:-0x1111111111111111111111111111111111111111111111111111111111111111}"
      SSV_CIRC_TIMEOUT_MS: "${SSV_CIRC_TIMEOUT_MS:-20000}"
      COORDINATOR_PRIVATE_KEY: "${COORDINATOR_PRIVATE_KEY}"
    volumes:
      - rollup-a-geth:/data
      - ../../networks/rollup-a:/config:ro
      - ../../networks/rollup-b:/config_b:ro
    ports:
      - "${ROLLUP_A_RPC_PORT}:8545"
      - "18546:8546"
      - "18551:8551"
      - "19898:9898"
    depends_on:
      - publisher
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://127.0.0.1:8545 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 12
      start_period: 10s
    entrypoint: []
    command:
      - /bin/sh
      - -c
      - |
        set -eu

        get_mailbox_addr() {
          local file="$1"
          local addr=""
          local attempts=0
          while true; do
            attempts=$$((attempts + 1))
            if [ -s "$$file" ]; then
              addr=$(sed -n 's/.*"Mailbox"[[:space:]]*:[[:space:]]*"\([^"]*\)".*/\1/p' "$$file" | head -n1 || true)
              if [ -n "$$addr" ] && printf '%s\n' "$$addr" | grep -Eq '^0x[0-9a-fA-F]{40}$'; then
                printf '%s' "$$addr"
                return 0
              fi
            fi
            if [ $$attempts -ge 60 ]; then
              echo "[error] mailbox address not available in $$file after $$attempts checks" >&2
              exit 1
            fi
            echo "[wait] mailbox address unavailable in $$file (attempt $$attempts)" >&2
            sleep 1
          done
        }

        COORDINATOR_KEY=$${COORDINATOR_PRIVATE_KEY:-}
        if [ -z "$$COORDINATOR_KEY" ]; then
          echo "[error] COORDINATOR_PRIVATE_KEY is required" >&2
          exit 1
        fi
        if [ ! -f /data/geth/chaindata/CURRENT ]; then
          echo '[*] initializing op-geth datadir'
          GETH_COORDINATOR_KEY="$$COORDINATOR_KEY" geth --networkid=$${ROLLUP_CHAIN_ID} init --state.scheme=hash --datadir /data /config/genesis.json
          if [ ! -d /data/keystore ] || [ -z $$(ls -A /data/keystore 2>/dev/null) ]; then
            if [ -n "$$WALLET_PRIVATE_KEY" ]; then
              printf '%s' "$${WALLET_PRIVATE_KEY}" | sed 's/^0x//' | geth account import --datadir /data --password /config/password.txt /dev/stdin >/dev/null
            fi
            if [ -n "$$SEQUENCER_PRIVATE_KEY" ] && [ "$$SEQUENCER_PRIVATE_KEY" != "$$WALLET_PRIVATE_KEY" ]; then
              printf '%s' "$${SEQUENCER_PRIVATE_KEY}" | sed 's/^0x//' | geth account import --datadir /data --password /config/password.txt /dev/stdin >/dev/null
            fi
          fi
        fi
        SEQUENCER_KEY=$${SEQUENCER_PRIVATE_KEY:-$${WALLET_PRIVATE_KEY:-}}
        if [ -z "$$SEQUENCER_KEY" ]; then
          echo "[error] SEQUENCER_PRIVATE_KEY is required" >&2
          exit 1
        fi
        EXTRA_FLAGS=${EXTRA_OP_GETH_FLAGS:-}
        MAILBOX_A=$(get_mailbox_addr /config/contracts.json)
        MAILBOX_B=$(get_mailbox_addr /config_b/contracts.json)
        exec geth \
          --verbosity=4 \
          --datadir /data \
          --http --http.addr=0.0.0.0 --http.port=8545 --http.corsdomain='*' --http.vhosts='*' \
          --http.api=web3,debug,eth,txpool,net,engine,compose,miner \
          --ws --ws.addr=0.0.0.0 --ws.port=8546 --ws.origins='*' --ws.api=debug,eth,txpool,net,engine \
          --authrpc.addr=0.0.0.0 --authrpc.port=8551 --authrpc.vhosts='*' --authrpc.jwtsecret=/config/jwt.txt \
          --syncmode=full --gcmode=archive --nodiscover --maxpeers=0 \
          --networkid=$${ROLLUP_CHAIN_ID} \
          --metrics --metrics.addr=0.0.0.0 --metrics.port=6060 \
          --rollup.disabletxpoolgossip=true \
          --rpc.allow-unprotected-txs \
          --sp.addr=publisher:8080 \
          --sp.listen.addr=:9898 \
          --sequencer.addrs=${ROLLUP_B_CHAIN_ID}:op-geth-b:9898 \
          --mailbox.addr-a=$${MAILBOX_A} \
          --mailbox.addr-b=$${MAILBOX_B} \
          --sequencer.key=$${SEQUENCER_KEY} \
          --rollup.computependingblock=true \
          --coordinator.key=$${COORDINATOR_KEY} \
          $${EXTRA_FLAGS}

  op-node-a:
    build:
      context: ${OPTIMISM_PATH}
      dockerfile: ../../l2runtime/docker/optimism.Dockerfile
      target: op-node
    image: local/op-node:dev
    container_name: op-node-a
    labels:
      - "stack=localnet-l2"
    depends_on:
      op-geth-a:
        condition: service_healthy
    environment:
      OP_NODE_L1_ETH_RPC: "${L1_EL_URL}"
      OP_NODE_L1_BEACON: "${L1_CL_URL}"
      OP_NODE_L2_ENGINE_RPC: "http://op-geth-a:8551"
      OP_NODE_L2_ENGINE_AUTH: "/config/jwt.txt"
      OP_NODE_ROLLUP_CONFIG: "/config/rollup.json"
      OP_NODE_DATADIR: "/data/opnode"
      OP_NODE_P2P_DISABLE: "true"
      OP_NODE_SEQUENCER_ENABLED: "true"
      OP_NODE_SEQUENCER_L1_CONFS: "0" #"5" Don't wait for confirmations
      OP_NODE_VERIFIER_L1_CONFS: "0" #"4" Don't wait for confirmations
      OP_NODE_P2P_SEQUENCER_KEY: "${SEQUENCER_PRIVATE_KEY:-${WALLET_PRIVATE_KEY}}"
      OP_NODE_RPC_ADDR: "0.0.0.0"
      OP_NODE_RPC_PORT: "9545"
      OP_NODE_RPC_ENABLE_ADMIN: "true"
      OP_NODE_LOG_LEVEL: "info"
    volumes:
      - rollup-a-opnode:/data
      - ../../networks/rollup-a:/config:ro
    ports:
      - "19545:9545"

  op-batcher-a:
    build:
      context: ${OPTIMISM_PATH}
      dockerfile: ../../l2runtime/docker/optimism.Dockerfile
      target: op-batcher
    image: local/op-batcher:dev
    container_name: op-batcher-a
    labels:
      - "stack=localnet-l2"
    depends_on:
      - op-node-a
    environment:
      OP_BATCHER_L1_ETH_RPC: "${L1_EL_URL}"
      OP_BATCHER_L2_ETH_RPC: "http://op-geth-a:8545"
      OP_BATCHER_ROLLUP_RPC: "http://op-node-a:9545"
      OP_BATCHER_PRIVATE_KEY: "${WALLET_PRIVATE_KEY}"
      OP_BATCHER_POLL_INTERVAL: "1s"
      OP_BATCHER_SUB_SAFETY_MARGIN: "6"
      OP_BATCHER_NUM_CONFIRMATIONS: "1"
      OP_BATCHER_MAX_CHANNEL_DURATION: "25"
      OP_BATCHER_RPC_ADDR: "0.0.0.0"
      OP_BATCHER_RPC_PORT: "8548"
      OP_BATCHER_RPC_ENABLE_ADMIN: "true"
    ports:
      - "18548:8548"

  op-proposer-a:
    build:
      context: ${OPTIMISM_PATH}
      dockerfile: ../../l2runtime/docker/optimism.Dockerfile
      target: op-proposer
    image: local/op-proposer:dev
    container_name: op-proposer-a
    labels:
      - "stack=localnet-l2"
    depends_on:
      - op-node-a
    env_file:
      - ../../networks/rollup-a/runtime.env
    environment:
      OP_PROPOSER_L1_ETH_RPC: "${L1_EL_URL}"
      OP_PROPOSER_ROLLUP_RPC: "http://op-node-a:9545"
      OP_PROPOSER_PRIVATE_KEY: "${WALLET_PRIVATE_KEY}"
      OP_PROPOSER_POLL_INTERVAL: "12s"
      OP_PROPOSER_PROPOSAL_INTERVAL: "10m"
      OP_PROPOSER_GAME_TYPE: "1"
      OP_PROPOSER_RPC_PORT: "8560"
      OP_PROPOSER_RPC_ADDR: "0.0.0.0"
      OP_PROPOSER_RPC_ENABLE_ADMIN: "true"
    ports:
      - "18560:8560"

  op-geth-b:
    build:
      context: ${OP_GETH_PATH}
      dockerfile: Dockerfile
    image: local/op-geth:dev
    container_name: op-geth-b
    labels:
      - "stack=localnet-l2"
    environment:
      ROLLUP_CHAIN_ID: "${ROLLUP_B_CHAIN_ID}"
      WALLET_PRIVATE_KEY: "${WALLET_PRIVATE_KEY}"
      SEQUENCER_PRIVATE_KEY: "${SEQUENCER_PRIVATE_KEY:-0x1111111111111111111111111111111111111111111111111111111111111111}"
      SSV_CIRC_TIMEOUT_MS: "${SSV_CIRC_TIMEOUT_MS:-20000}"
      COORDINATOR_PRIVATE_KEY: "${COORDINATOR_PRIVATE_KEY}"
    volumes:
      - rollup-b-geth:/data
      - ../../networks/rollup-b:/config:ro
      - ../../networks/rollup-a:/config_a:ro
    ports:
      - "${ROLLUP_B_RPC_PORT}:8545"
      - "28546:8546"
      - "28551:8551"
      - "29898:9898"
    depends_on:
      - publisher
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://127.0.0.1:8545 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 12
      start_period: 10s
    entrypoint: []
    command:
      - /bin/sh
      - -c
      - |
        set -eu

        get_mailbox_addr() {
          local file="$1"
          local addr=""
          local attempts=0
          while true; do
            attempts=$$((attempts + 1))
            if [ -s "$$file" ]; then
              addr=$(sed -n 's/.*"Mailbox"[[:space:]]*:[[:space:]]*"\([^"]*\)".*/\1/p' "$$file" | head -n1 || true)
              if [ -n "$$addr" ] && printf '%s\n' "$$addr" | grep -Eq '^0x[0-9a-fA-F]{40}$'; then
                printf '%s' "$$addr"
                return 0
              fi
            fi
            if [ $$attempts -ge 60 ]; then
              echo "[error] mailbox address not available in $$file after $$attempts checks" >&2
              exit 1
            fi
            echo "[wait] mailbox address unavailable in $$file (attempt $$attempts)" >&2
            sleep 1
          done
        }

        COORDINATOR_KEY=$${COORDINATOR_PRIVATE_KEY:-}
        if [ -z "$$COORDINATOR_KEY" ]; then
          echo "[error] COORDINATOR_PRIVATE_KEY is required" >&2
          exit 1
        fi
        if [ ! -f /data/geth/chaindata/CURRENT ]; then
          echo '[*] initializing op-geth datadir'
          GETH_COORDINATOR_KEY="$$COORDINATOR_KEY" geth --networkid=$${ROLLUP_CHAIN_ID} init --state.scheme=hash --datadir /data /config/genesis.json
          if [ ! -d /data/keystore ] || [ -z $$(ls -A /data/keystore 2>/dev/null) ]; then
            if [ -n "$$WALLET_PRIVATE_KEY" ]; then
              printf '%s' "$${WALLET_PRIVATE_KEY}" | sed 's/^0x//' | geth account import --datadir /data --password /config/password.txt /dev/stdin >/dev/null
            fi
            if [ -n "$$SEQUENCER_PRIVATE_KEY" ] && [ "$$SEQUENCER_PRIVATE_KEY" != "$$WALLET_PRIVATE_KEY" ]; then
              printf '%s' "$${SEQUENCER_PRIVATE_KEY}" | sed 's/^0x//' | geth account import --datadir /data --password /config/password.txt /dev/stdin >/dev/null
            fi
          fi
        fi
        SEQUENCER_KEY=$${SEQUENCER_PRIVATE_KEY:-$${WALLET_PRIVATE_KEY:-}}
        if [ -z "$$SEQUENCER_KEY" ]; then
          echo "[error] SEQUENCER_PRIVATE_KEY is required" >&2
          exit 1
        fi
        EXTRA_FLAGS=${EXTRA_OP_GETH_FLAGS:-}
        MAILBOX_A=$(get_mailbox_addr /config_a/contracts.json)
        MAILBOX_B=$(get_mailbox_addr /config/contracts.json)
        exec geth \
          --verbosity=4 \
          --datadir /data \
          --http --http.addr=0.0.0.0 --http.port=8545 --http.corsdomain='*' --http.vhosts='*' \
          --http.api=web3,debug,eth,txpool,net,engine,compose,miner \
          --ws --ws.addr=0.0.0.0 --ws.port=8546 --ws.origins='*' --ws.api=debug,eth,txpool,net,engine \
          --authrpc.addr=0.0.0.0 --authrpc.port=8551 --authrpc.vhosts='*' --authrpc.jwtsecret=/config/jwt.txt \
          --syncmode=full --gcmode=archive --nodiscover --maxpeers=0 \
          --networkid=$${ROLLUP_CHAIN_ID} \
          --metrics --metrics.addr=0.0.0.0 --metrics.port=6060 \
          --rollup.disabletxpoolgossip=true \
          --rpc.allow-unprotected-txs \
          --sp.addr=publisher:8080 \
          --sp.listen.addr=:9898 \
          --sequencer.addrs=${ROLLUP_A_CHAIN_ID}:op-geth-a:9898 \
          --mailbox.addr-a=$${MAILBOX_A} \
          --mailbox.addr-b=$${MAILBOX_B} \
          --sequencer.key=$${SEQUENCER_KEY} \
          --rollup.computependingblock=true \
          --coordinator.key=$${COORDINATOR_KEY} \
          $${EXTRA_FLAGS}

  op-node-b:
    build:
      context: ${OPTIMISM_PATH}
      dockerfile: ../../l2runtime/docker/optimism.Dockerfile
      target: op-node
    image: local/op-node:dev
    container_name: op-node-b
    labels:
      - "stack=localnet-l2"
    depends_on:
      op-geth-b:
        condition: service_healthy
    environment:
      OP_NODE_L1_ETH_RPC: "${L1_EL_URL}"
      OP_NODE_L1_BEACON: "${L1_CL_URL}"
      OP_NODE_L2_ENGINE_RPC: "http://op-geth-b:8551"
      OP_NODE_L2_ENGINE_AUTH: "/config/jwt.txt"
      OP_NODE_ROLLUP_CONFIG: "/config/rollup.json"
      OP_NODE_DATADIR: "/data/opnode"
      OP_NODE_P2P_DISABLE: "true"
      OP_NODE_SEQUENCER_ENABLED: "true"
      OP_NODE_SEQUENCER_L1_CONFS: "0" #"5" Don't wait for confirmations
      OP_NODE_VERIFIER_L1_CONFS: "0" #"4" Don't wait for confirmations
      OP_NODE_P2P_SEQUENCER_KEY: "${SEQUENCER_PRIVATE_KEY:-${WALLET_PRIVATE_KEY}}"
      OP_NODE_RPC_ADDR: "0.0.0.0"
      OP_NODE_RPC_PORT: "9545"
      OP_NODE_RPC_ENABLE_ADMIN: "true"
      OP_NODE_LOG_LEVEL: "info"
    volumes:
      - rollup-b-opnode:/data
      - ../../networks/rollup-b:/config:ro
    ports:
      - "29545:9545"

  op-batcher-b:
    build:
      context: ${OPTIMISM_PATH}
      dockerfile: ../../l2runtime/docker/optimism.Dockerfile
      target: op-batcher
    image: local/op-batcher:dev
    container_name: op-batcher-b
    labels:
      - "stack=localnet-l2"
    depends_on:
      - op-node-b
    environment:
      OP_BATCHER_L1_ETH_RPC: "${L1_EL_URL}"
      OP_BATCHER_L2_ETH_RPC: "http://op-geth-b:8545"
      OP_BATCHER_ROLLUP_RPC: "http://op-node-b:9545"
      OP_BATCHER_PRIVATE_KEY: "${WALLET_PRIVATE_KEY}"
      OP_BATCHER_POLL_INTERVAL: "1s"
      OP_BATCHER_SUB_SAFETY_MARGIN: "6"
      OP_BATCHER_NUM_CONFIRMATIONS: "1"
      OP_BATCHER_MAX_CHANNEL_DURATION: "25"
      OP_BATCHER_RPC_ADDR: "0.0.0.0"
      OP_BATCHER_RPC_PORT: "8548"
      OP_BATCHER_RPC_ENABLE_ADMIN: "true"
    ports:
      - "28548:8548"

  op-proposer-b:
    build:
      context: ${OPTIMISM_PATH}
      dockerfile: ../../l2runtime/docker/optimism.Dockerfile
      target: op-proposer
    image: local/op-proposer:dev
    container_name: op-proposer-b
    labels:
      - "stack=localnet-l2"
    depends_on:
      - op-node-b
    env_file:
      - ../../networks/rollup-b/runtime.env
    environment:
      OP_PROPOSER_L1_ETH_RPC: "${L1_EL_URL}"
      OP_PROPOSER_ROLLUP_RPC: "http://op-node-b:9545"
      OP_PROPOSER_PRIVATE_KEY: "${WALLET_PRIVATE_KEY}"
      OP_PROPOSER_POLL_INTERVAL: "12s"
      OP_PROPOSER_PROPOSAL_INTERVAL: "10m"
      OP_PROPOSER_GAME_TYPE: "1"
      OP_PROPOSER_RPC_PORT: "8560"
      OP_PROPOSER_RPC_ADDR: "0.0.0.0"
      OP_PROPOSER_RPC_ENABLE_ADMIN: "true"
    ports:
      - "28560:8560"

volumes:
  rollup-a-geth:
  rollup-b-geth:
  rollup-a-opnode:
  rollup-b-opnode:
